name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev xorg-dev

    - name: Verify dependencies
      run: go mod verify

    - name: Build
      run: go build -v ./...

    - name: Run tests
      run: go test -v ./...

    - name: Run go vet
      run: go vet ./...

    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest

    - name: Run staticcheck
      run: staticcheck ./...

  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev xorg-dev

    - name: Install fyne packaging tool
      run: go install fyne.io/tools/cmd/fyne@latest

    - name: Build with go
      run: go build -v .

    - name: Test fyne package
      run: |
        fyne package --name nats-client-test
        Write-Host "Files created:"
        Get-ChildItem -Name "*nats-client-test*" -ErrorAction SilentlyContinue | ForEach-Object { Write-Host "  - $_" }
      shell: pwsh

    - name: Clean up test files
      run: |
        Write-Host "Cleaning up test files..."
        $filesToRemove = Get-ChildItem -Name "*nats-client-test*" -ErrorAction SilentlyContinue
        if ($filesToRemove) {
          foreach ($file in $filesToRemove) {
            Write-Host "Removing: $file"
            Remove-Item $file -Recurse -Force -ErrorAction SilentlyContinue
          }
        } else {
          Write-Host "No test files to clean up"
        }
      shell: pwsh 